{"ast":null,"code":"var _jsxFileName = \"/Users/jaskaranpalsingh/Downloads/ChartJS-in-React-main/src/components/BarChart.js\";\nimport React from 'react';\nimport { defaults, Bar } from 'react-chartjs-2';\nimport data from \"../ticker_data.json\";\ndefaults.global.tooltips.enabled = false;\ndefaults.global.legend.position = 'bottom';\nconst ticks = data;\nconst sub_names = ['Investing', 'SecurityAnalysis', 'Finance', 'WallStreetBets', 'Options', 'Stocks', 'StockMarket'];\nconst time_filters_list = ['hour', 'day', 'week', 'month', 'year', 'all'];\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sub = sub_names[3];\n    this.time = time_filters_list[4];\n    this.state = {\n      data_arr: getSubAndTime(this.sub, this.time),\n      label_arr: [\"MSFT\", \"PLTR\", \"TSLA\", \"AAPL\", \"TWTR\", \"NFLX\", \"BABA\", \"DIS\"]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Bar, {\n      data: {\n        labels: this.state.label_arr,\n        datasets: [{\n          label: '# of Mentions',\n          data: this.state.data_arr,\n          backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n          borderWidth: 1\n        }]\n      },\n      height: 400,\n      width: 600,\n      options: {\n        maintainAspectRatio: false,\n        title: {\n          display: true,\n          text: \"r/\" + this.sub + \" (\" + this.time + \")\",\n          fontSize: 25\n        },\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        },\n        legend: {\n          labels: {\n            boxWidth: 0,\n            fontSize: 15\n          }\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nclass userInputForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sub_name: '',\n      time_duration: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    const {\n      sub_name,\n      time_duration\n    } = this.state;\n    event.preventDefault();\n    alert('SubName: ${sub_name}  TimePeriod: ${time_duration} ');\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"sub_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, \"Sub Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"sub_name\",\n      placeholder: \"Investing\",\n      value: this.state.sub_name,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"time_duration\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, \"Time Period\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"time_duration\",\n      placeholder: \"All-Time\",\n      value: this.state.time_duration,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, \"ReRender Chart\")));\n  }\n\n}\n\nfunction getSubAndTime(input_subreddit, input_time_period) {\n  var ticker_mentions = [];\n\n  for (let i = 0; i < ticks.tickers.length; i++) {\n    if (ticks.tickers[i].time_period === input_time_period && ticks.tickers[i].subreddit === input_subreddit) {\n      ticker_mentions.push(ticks.tickers[i].mentions);\n    }\n  }\n\n  return ticker_mentions;\n}\n\nexport default BarChart; // export default userInputForm","map":{"version":3,"sources":["/Users/jaskaranpalsingh/Downloads/ChartJS-in-React-main/src/components/BarChart.js"],"names":["React","defaults","Bar","data","global","tooltips","enabled","legend","position","ticks","sub_names","time_filters_list","BarChart","Component","constructor","props","sub","time","state","data_arr","getSubAndTime","label_arr","render","labels","datasets","label","backgroundColor","borderWidth","maintainAspectRatio","title","display","text","fontSize","scales","yAxes","beginAtZero","boxWidth","userInputForm","sub_name","time_duration","handleChange","bind","handleSubmit","event","preventDefault","alert","setState","target","name","value","input_subreddit","input_time_period","ticker_mentions","i","tickers","length","time_period","subreddit","push","mentions"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,iBAA9B;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AAEAF,QAAQ,CAACG,MAAT,CAAgBC,QAAhB,CAAyBC,OAAzB,GAAmC,KAAnC;AACAL,QAAQ,CAACG,MAAT,CAAgBG,MAAhB,CAAuBC,QAAvB,GAAkC,QAAlC;AAEA,MAAMC,KAAK,GAAGN,IAAd;AACA,MAAMO,SAAS,GAAG,CAAC,WAAD,EAAc,kBAAd,EAAkC,SAAlC,EAA6C,gBAA7C,EAA+D,SAA/D,EAA0E,QAA1E,EAAoF,aAApF,CAAlB;AACA,MAAMC,iBAAiB,GAAG,CAAC,MAAD,EAAQ,KAAR,EAAc,MAAd,EAAqB,OAArB,EAA6B,MAA7B,EAAoC,KAApC,CAA1B;;AAEA,MAAMC,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AAKrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAHnBC,GAGmB,GAHbN,SAAS,CAAC,CAAD,CAGI;AAAA,SAFnBO,IAEmB,GAFZN,iBAAiB,CAAC,CAAD,CAEL;AAEjB,SAAKO,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAEC,aAAa,CAAC,KAAKJ,GAAN,EAAW,KAAKC,IAAhB,CADZ;AAEXI,MAAAA,SAAS,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,MAAzC,EAAiD,MAAjD,EAAyD,KAAzD;AAFA,KAAb;AAID;;AAGDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AACE,MAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAE,KAAKL,KAAL,CAAWG,SADf;AAEJG,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,eADT;AAEEtB,UAAAA,IAAI,EAAE,KAAKe,KAAL,CAAWC,QAFnB;AAGEO,UAAAA,eAAe,EAAE,CACf,yBADe,EAEf,yBAFe,EAGf,yBAHe,EAIf,yBAJe,EAKf,0BALe,EAMf,yBANe,CAHnB;AAWEC,UAAAA,WAAW,EAAE;AAXf,SADQ;AAFN,OADR;AAmBE,MAAA,MAAM,EAAE,GAnBV;AAoBE,MAAA,KAAK,EAAE,GApBT;AAqBE,MAAA,OAAO,EAAE;AACPC,QAAAA,mBAAmB,EAAE,KADd;AAEPC,QAAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE,IADJ;AAELC,UAAAA,IAAI,EAAE,OAAO,KAAKf,GAAZ,GAAkB,IAAlB,GAAyB,KAAKC,IAA9B,GAAqC,GAFtC;AAGLe,UAAAA,QAAQ,EAAE;AAHL,SAFA;AAOPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,CACL;AACEzB,YAAAA,KAAK,EAAE;AACL0B,cAAAA,WAAW,EAAE;AADR;AADT,WADK;AADD,SAPD;AAgBP5B,QAAAA,MAAM,EAAE;AACNgB,UAAAA,MAAM,EAAE;AACNa,YAAAA,QAAQ,EAAE,CADJ;AAENJ,YAAAA,QAAQ,EAAE;AAFJ;AADF;AAhBD,OArBX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAiDD;;AAhEoC;;AAmEvC,MAAMK,aAAN,SAA4BrC,KAAK,CAACa,SAAlC,CAA4C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKG,KAAL,GAAa;AACXoB,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,aAAa,EAAE;AAFJ,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAClB,UAAM;AAACL,MAAAA,QAAD;AAAWC,MAAAA;AAAX,QAA4B,KAAKrB,KAAvC;AACAyB,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,KAAK,CAAC,qDAAD,CAAL;AACD;;AAEDL,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAClB,SAAKG,QAAL,CAAc;AACZ,OAACH,KAAK,CAACI,MAAN,CAAaC,IAAd,GAAsBL,KAAK,CAACI,MAAN,CAAaE;AADvB,KAAd;AAGD;;AAED3B,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKoB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,WAAW,EAAC,WAFd;AAGE,MAAA,KAAK,EAAI,KAAKxB,KAAL,CAAWoB,QAHtB;AAIE,MAAA,QAAQ,EAAE,KAAKE,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AACE,MAAA,IAAI,EAAC,eADP;AAEE,MAAA,WAAW,EAAC,UAFd;AAGE,MAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWqB,aAHpB;AAIE,MAAA,QAAQ,EAAE,KAAKC,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAVF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAnBF,CADF;AAyBD;;AAjDyC;;AAsD5C,SAASpB,aAAT,CAAuB8B,eAAvB,EAAwCC,iBAAxC,EAA0D;AACxD,MAAIC,eAAe,GAAG,EAAtB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG5C,KAAK,CAAC6C,OAAN,CAAcC,MAAlC,EAA0CF,CAAC,EAA3C,EAA8C;AAC5C,QAAI5C,KAAK,CAAC6C,OAAN,CAAcD,CAAd,EAAiBG,WAAjB,KAAiCL,iBAAjC,IAAsD1C,KAAK,CAAC6C,OAAN,CAAcD,CAAd,EAAiBI,SAAjB,KAA+BP,eAAzF,EAAyG;AACvGE,MAAAA,eAAe,CAACM,IAAhB,CAAqBjD,KAAK,CAAC6C,OAAN,CAAcD,CAAd,EAAiBM,QAAtC;AACD;AACF;;AACD,SAAOP,eAAP;AACD;;AAED,eAAexC,QAAf,C,CACA","sourcesContent":["import React from 'react'\nimport { defaults, Bar } from 'react-chartjs-2'\nimport data from \"../ticker_data.json\"\n\ndefaults.global.tooltips.enabled = false\ndefaults.global.legend.position = 'bottom'\n\nconst ticks = data;\nconst sub_names = ['Investing', 'SecurityAnalysis', 'Finance', 'WallStreetBets', 'Options', 'Stocks', 'StockMarket'];\nconst time_filters_list = ['hour','day','week','month','year','all'];\n\nclass BarChart extends React.Component {\n\n  sub = sub_names[3];\n  time = time_filters_list[4];\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data_arr: getSubAndTime(this.sub, this.time),\n      label_arr: [\"MSFT\", \"PLTR\", \"TSLA\", \"AAPL\", \"TWTR\", \"NFLX\", \"BABA\", \"DIS\"]\n    };\n  }\n\n\n  render() {\n    return (\n      <div>\n        <Bar\n          data={{\n            labels: this.state.label_arr,\n            datasets: [\n              {\n                label: '# of Mentions',\n                data: this.state.data_arr,\n                backgroundColor: [\n                  'rgba(255, 99, 132, 0.2)',\n                  'rgba(54, 162, 235, 0.2)',\n                  'rgba(255, 206, 86, 0.2)',\n                  'rgba(75, 192, 192, 0.2)',\n                  'rgba(153, 102, 255, 0.2)',\n                  'rgba(255, 159, 64, 0.2)',\n                ],\n                borderWidth: 1,\n              },\n            ],\n          }}\n          height={400}\n          width={600}\n          options={{\n            maintainAspectRatio: false,\n            title: {\n              display: true,\n              text: \"r/\" + this.sub + \" (\" + this.time + \")\",\n              fontSize: 25\n            },\n            scales: {\n              yAxes: [\n                {\n                  ticks: {\n                    beginAtZero: true,\n                  },\n                },\n              ],\n            },\n            legend: {\n              labels: {\n                boxWidth: 0,\n                fontSize: 15,\n              },\n            },\n          }}\n        />\n      </div>\n    )    \n  }\n}\n\nclass userInputForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sub_name: '',\n      time_duration: ''\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    const {sub_name, time_duration} = this.state;\n    event.preventDefault();\n    alert('SubName: ${sub_name}  TimePeriod: ${time_duration} ')\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name] : event.target.value\n    })\n  }\n\n  render() {\n    return(\n      <form onSubmit={this.handleSubmit}>\n        <div>\n          <label htmlFor=\"sub_name\">Sub Name</label>\n          <input \n            name=\"sub_name\"\n            placeholder=\"Investing\"\n            value = {this.state.sub_name}\n            onChange={this.handleChange}\n            />\n        </div>\n        <div>\n          <label htmlFor=\"time_duration\">Time Period</label>\n          <input\n            name=\"time_duration\"\n            placeholder=\"All-Time\"\n            value={this.state.time_duration}\n            onChange={this.handleChange}\n            />\n        </div>\n        <div>\n          <button>ReRender Chart</button>\n        </div>\n      </form>\n    )\n  }\n}\n\n\n\nfunction getSubAndTime(input_subreddit, input_time_period){\n  var ticker_mentions = [];\n  for (let i = 0; i < ticks.tickers.length; i++){\n    if (ticks.tickers[i].time_period === input_time_period && ticks.tickers[i].subreddit === input_subreddit){\n      ticker_mentions.push(ticks.tickers[i].mentions);\n    }\n  }\n  return ticker_mentions;  \n}\n\nexport default BarChart\n// export default userInputForm"]},"metadata":{},"sourceType":"module"}