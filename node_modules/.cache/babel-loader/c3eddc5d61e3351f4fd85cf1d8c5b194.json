{"ast":null,"code":"var _jsxFileName = \"/Users/jaskaranpalsingh/Downloads/ChartJS-in-React-main/src/components/BarChart.js\";\nimport React from 'react';\nimport { Pie, defaults, Bar } from 'react-chartjs-2';\nimport data from \"../ticker_data.json\";\ndefaults.global.tooltips.enabled = false;\ndefaults.global.legend.position = 'bottom';\nconst ticks = data; // var investing_all = []\n// const ticker_labels = [\"MSFT\", \"PLTR\", \"TSLA\", \"AAPL\", \"TWTR\", \"NFLX\", \"BABA\", \"DIS\"];\n// for (let i = 0; i < ticks.tickers.length; i++){\n//   if (ticks.tickers[i].time_period === \"all\" && ticks.tickers[i].subreddit === \"Investing\"){\n//     investing_all.push(ticks.tickers[i].mentions);\n//   }\n// }\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data_arr: getSubAndTime(\"Investing\", \"all\"),\n      label_arr: [\"MSFT\", \"PLTR\", \"TSLA\", \"AAPL\", \"TWTR\", \"NFLX\", \"BABA\", \"DIS\"]\n    };\n  } // var data_arr = getSubAndTime(\"Investing\", \"all\")\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Bar, {\n      data: {\n        labels: this.props.label_arr,\n        datasets: [{\n          label: '# of Mentions',\n          data: this.props.data_arr,\n          backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n          borderWidth: 1\n        }]\n      },\n      height: 400,\n      width: 600,\n      options: {\n        maintainAspectRatio: false,\n        title: {\n          display: true,\n          text: \"r/Investing (All-time)\"\n        },\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        },\n        legend: {\n          labels: {\n            boxWidth: 0,\n            fontSize: 15\n          }\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nfunction getSubAndTime(input_subreddit, input_time_period) {\n  var ticker_mentions = [];\n\n  for (let i = 0; i < ticks.tickers.length; i++) {\n    if (ticks.tickers[i].time_period === input_time_period && ticks.tickers[i].subreddit === input_subreddit) {\n      ticker_mentions.push(ticks.tickers[i].mentions);\n    }\n  }\n\n  return ticker_mentions;\n}\n\nexport default BarChart;","map":{"version":3,"sources":["/Users/jaskaranpalsingh/Downloads/ChartJS-in-React-main/src/components/BarChart.js"],"names":["React","Pie","defaults","Bar","data","global","tooltips","enabled","legend","position","ticks","BarChart","Component","constructor","props","state","data_arr","getSubAndTime","label_arr","render","labels","datasets","label","backgroundColor","borderWidth","maintainAspectRatio","title","display","text","scales","yAxes","beginAtZero","boxWidth","fontSize","input_subreddit","input_time_period","ticker_mentions","i","tickers","length","time_period","subreddit","push","mentions"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,QAAd,EAAwBC,GAAxB,QAAmC,iBAAnC;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AAEAF,QAAQ,CAACG,MAAT,CAAgBC,QAAhB,CAAyBC,OAAzB,GAAmC,KAAnC;AACAL,QAAQ,CAACG,MAAT,CAAgBG,MAAhB,CAAuBC,QAAvB,GAAkC,QAAlC;AAEA,MAAMC,KAAK,GAAGN,IAAd,C,CAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;;AAKA,MAAMO,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAEC,aAAa,CAAC,WAAD,EAAc,KAAd,CADZ;AAEXC,MAAAA,SAAS,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,MAAzC,EAAiD,MAAjD,EAAyD,KAAzD;AAFA,KAAb;AAID,GAPoC,CAQrC;;;AAEAC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AACE,MAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAE,KAAKN,KAAL,CAAWI,SADf;AAEJG,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,eADT;AAEElB,UAAAA,IAAI,EAAE,KAAKU,KAAL,CAAWE,QAFnB;AAGEO,UAAAA,eAAe,EAAE,CACf,yBADe,EAEf,yBAFe,EAGf,yBAHe,EAIf,yBAJe,EAKf,0BALe,EAMf,yBANe,CAHnB;AAWEC,UAAAA,WAAW,EAAE;AAXf,SADQ;AAFN,OADR;AAmBE,MAAA,MAAM,EAAE,GAnBV;AAoBE,MAAA,KAAK,EAAE,GApBT;AAqBE,MAAA,OAAO,EAAE;AACPC,QAAAA,mBAAmB,EAAE,KADd;AAEPC,QAAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE,IADJ;AAELC,UAAAA,IAAI,EAAE;AAFD,SAFA;AAMPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,CACL;AACEpB,YAAAA,KAAK,EAAE;AACLqB,cAAAA,WAAW,EAAE;AADR;AADT,WADK;AADD,SAND;AAePvB,QAAAA,MAAM,EAAE;AACNY,UAAAA,MAAM,EAAE;AACNY,YAAAA,QAAQ,EAAE,CADJ;AAENC,YAAAA,QAAQ,EAAE;AAFJ;AADF;AAfD,OArBX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAgDD;;AA3DoC;;AAgEvC,SAAShB,aAAT,CAAuBiB,eAAvB,EAAwCC,iBAAxC,EAA0D;AACxD,MAAIC,eAAe,GAAG,EAAtB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG3B,KAAK,CAAC4B,OAAN,CAAcC,MAAlC,EAA0CF,CAAC,EAA3C,EAA8C;AAC5C,QAAI3B,KAAK,CAAC4B,OAAN,CAAcD,CAAd,EAAiBG,WAAjB,KAAiCL,iBAAjC,IAAsDzB,KAAK,CAAC4B,OAAN,CAAcD,CAAd,EAAiBI,SAAjB,KAA+BP,eAAzF,EAAyG;AACvGE,MAAAA,eAAe,CAACM,IAAhB,CAAqBhC,KAAK,CAAC4B,OAAN,CAAcD,CAAd,EAAiBM,QAAtC;AACD;AACF;;AACD,SAAOP,eAAP;AACD;;AAED,eAAezB,QAAf","sourcesContent":["import React from 'react'\nimport { Pie, defaults, Bar } from 'react-chartjs-2'\nimport data from \"../ticker_data.json\"\n\ndefaults.global.tooltips.enabled = false\ndefaults.global.legend.position = 'bottom'\n\nconst ticks = data;\n\n// var investing_all = []\n\n// const ticker_labels = [\"MSFT\", \"PLTR\", \"TSLA\", \"AAPL\", \"TWTR\", \"NFLX\", \"BABA\", \"DIS\"];\n\n// for (let i = 0; i < ticks.tickers.length; i++){\n//   if (ticks.tickers[i].time_period === \"all\" && ticks.tickers[i].subreddit === \"Investing\"){\n//     investing_all.push(ticks.tickers[i].mentions);\n//   }\n// }\n\n\n\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data_arr: getSubAndTime(\"Investing\", \"all\"),\n      label_arr: [\"MSFT\", \"PLTR\", \"TSLA\", \"AAPL\", \"TWTR\", \"NFLX\", \"BABA\", \"DIS\"]\n    };\n  }\n  // var data_arr = getSubAndTime(\"Investing\", \"all\")\n\n  render() {\n    return (\n      <div>\n        <Bar\n          data={{\n            labels: this.props.label_arr,\n            datasets: [\n              {\n                label: '# of Mentions',\n                data: this.props.data_arr,\n                backgroundColor: [\n                  'rgba(255, 99, 132, 0.2)',\n                  'rgba(54, 162, 235, 0.2)',\n                  'rgba(255, 206, 86, 0.2)',\n                  'rgba(75, 192, 192, 0.2)',\n                  'rgba(153, 102, 255, 0.2)',\n                  'rgba(255, 159, 64, 0.2)',\n                ],\n                borderWidth: 1,\n              },\n            ],\n          }}\n          height={400}\n          width={600}\n          options={{\n            maintainAspectRatio: false,\n            title: {\n              display: true,\n              text: \"r/Investing (All-time)\"\n            },\n            scales: {\n              yAxes: [\n                {\n                  ticks: {\n                    beginAtZero: true,\n                  },\n                },\n              ],\n            },\n            legend: {\n              labels: {\n                boxWidth: 0,\n                fontSize: 15,\n              },\n            },\n          }}\n        />\n      </div>\n    )    \n  }\n}\n\n\n\nfunction getSubAndTime(input_subreddit, input_time_period){\n  var ticker_mentions = [];\n  for (let i = 0; i < ticks.tickers.length; i++){\n    if (ticks.tickers[i].time_period === input_time_period && ticks.tickers[i].subreddit === input_subreddit){\n      ticker_mentions.push(ticks.tickers[i].mentions);\n    }\n  }\n  return ticker_mentions;  \n}\n\nexport default BarChart"]},"metadata":{},"sourceType":"module"}